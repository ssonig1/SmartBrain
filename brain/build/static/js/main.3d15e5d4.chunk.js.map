{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Forgetpassword/Forgetpassword.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","App.js","index.js"],"names":["FaceRecognition","imageUrl","box","className","id","alt","src","width","heigh","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","display","justifyContent","onClick","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","req","status","errorText","this","htmlFor","type","name","onChange","React","Component","Register","onNameChange","Forgetpassword","Logo","options","max","height","paddingTop","brain","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","ReactDOM","render"],"mappings":"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","file":"static/js/main.3d15e5d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('signin')} className='f3 link grow white pa3 pointer'>Log Out</p>\r\n        </nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('signin')} className='f3 link grow white  pa3 pointer'>Log In</p>\r\n          <p onClick={() => onRouteChange('register')} className='f3 link grow white  pa3 pointer'>Register</p>\r\n        </nav>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('http://localhost:3000/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user => {\r\n      if (user.id) {\r\n        this.props.loadUser(user)\r\n        this.props.onRouteChange('home');\r\n      }\r\n    })\r\n    .then(req=>{\r\n    if (req.status==='wrong credentials')\r\n    { this.setState({\r\n      errorText: \"Wrong email or password\"})\r\n\r\n    }})\r\n    \r\n    }\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <div className=\"lh-copy mt3\">\r\n            </div>\r\n            {/* <div data-uia =\" error-message-container\" className=\"ui-message-container ui-message-error\" >\r\n              <div data-uia =\"text\" className=\"ui-message-contents\">\r\n              \"Invalid email address\"\r\n              </div>\r\n\r\n            </div> */}\r\n              <legend className=\"f1 fw6 ph0 mh0 white\">Log In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  \r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  \r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib white\"\r\n                type=\"submit\"\r\n                value=\"Log In\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p  onClick={() => onRouteChange('forgetpassword')} className=\"f6 link grow black db pointer\">Forget Password</p>\r\n            </div>\r\n            {/* <div className=\"lh-copy mt2\">\r\n              <p  onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n            </div> */}\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n// import { Alert } from 'react-alert'\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({name: event.target.value})\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('http://localhost:3000/register', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n      \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nclass Forgetpassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({name: event.target.value})\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('http://localhost:3000/fp', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(this.props.onRouteChange('signin'))\r\n      \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0 white\">Change Password</legend>\r\n              {/* <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6 white\" htmlFor=\"name\">Name</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div> */}\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6 white\"  htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6 white\" htmlFor=\"password\">New Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--white bg-transparent white grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Change\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Forgetpassword;","export default __webpack_public_path__ + \"static/media/brain.00c04f7f.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='ma4 mt0'>\r\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n        <div className=\"Tilt-inner pa3\">\r\n          <img style={{paddingTop: '5px'}} alt='logo' src={brain}/>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className='f3'>\r\n        {'Smart Brain will detect faces in your pictures. Git it a try.'}\r\n      </p>\r\n      <div className='center'>\r\n        <div className='form center pa4 br3 shadow-5'>\r\n          <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n          <button\r\n            className='form1 w-30 grow f4 link ph3 pv2 dib white hover bg-white'\r\n            onClick={onButtonSubmit}\r\n          >Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      <div className='white f3'>\r\n        {`${name}, your current entry count is...`}\r\n      </div>\r\n      <div className='white f1'>\r\n        {entries}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Signin from './components/Signin/Signin';\r\nimport Register from './components/Register/Register';\r\nimport Forgetpassword from './components/Forgetpassword/Forgetpassword';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport './App.css';\r\n\r\nconst particlesOptions = {\r\n  \r\n  particles: {\r\n    number: {\r\n      value: 30,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  input: '',\r\n  imageUrl: '',\r\n  box: {},\r\n  route: 'signin',\r\n  isSignedIn: false,\r\n  user: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: ''\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({user: {\r\n      id: data.id,\r\n      name: data.name,\r\n      email: data.email,\r\n      entries: data.entries,\r\n      joined: data.joined\r\n    }})\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    this.setState({box: box});\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({input: event.target.value});\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({imageUrl: this.state.input});\r\n      fetch('http://localhost:3000/imageurl', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          input: this.state.input\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response) {\r\n          fetch('http://localhost:3000/image', {\r\n            method: 'put',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n              id: this.state.user.id\r\n            })\r\n          })\r\n            .then(response => response.json())\r\n            .then(count => {\r\n              this.setState(Object.assign(this.state.user, { entries: count}))\r\n            })\r\n            .catch(console.log)\r\n\r\n        }\r\n        this.displayFaceBox(this.calculateFaceLocation(response))\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      this.setState(initialState)\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true})\r\n    }\r\n    else if(route=='forgetpassword'){\r\n      this.setState(initialState)\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, box } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n         <Particles className='particles'\r\n          params={particlesOptions}\r\n        />\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\r\n        { route === 'home'\r\n          ? <div>\r\n              <Logo />\r\n              <Rank\r\n                name={this.state.user.name}\r\n                entries={this.state.user.entries}\r\n              />\r\n              <ImageLinkForm\r\n                onInputChange={this.onInputChange}\r\n                onButtonSubmit={this.onButtonSubmit}\r\n              />\r\n              <FaceRecognition box={box} imageUrl={imageUrl} />\r\n            </div>\r\n          : (\r\n             route === 'signin'\r\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n             : (route === 'forgetpassword'\r\n             ?<Forgetpassword loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n              :\r\n              <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n              )\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import registerServiceWorker from './registerServiceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}